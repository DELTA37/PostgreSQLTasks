
# 2.1
psql -U postgres < demo_small.sql

INSERT INTO bookings.aircrafts
VALUES ( 'SU9', 'Sukhoi SuperJet-100', 3000 );
ERROR:  duplicate key value violates unique constraint "aircrafts_pkey"
DETAIL:  Key (aircraft_code)=(SU9) already exists.

                  Table "bookings.aircrafts"
    Column     |     Type     | Collation | Nullable | Default 
---------------+--------------+-----------+----------+---------
 aircraft_code | character(3) |           | not null | 
 model         | text         |           | not null | 
 range         | integer      |           | not null | 
Indexes:
    "aircrafts_pkey" PRIMARY KEY, btree (aircraft_code)
Check constraints:
    "aircrafts_range_check" CHECK (range > 0)
Referenced by:
    TABLE "bookings.flights" CONSTRAINT "flights_aircraft_code_fkey" FOREIGN KEY (aircraft_code) REFERENCES bookings.aircrafts(aircraft_code)
    TABLE "bookings.seats" CONSTRAINT "seats_aircraft_code_fkey" FOREIGN KEY (aircraft_code) REFERENCES bookings.aircrafts(aircraft_code) ON DELETE CASCADE


# 2.2
Предложение ORDER BY команды SELECT позволяет отсортировать данные при выводе.
По умолчанию сортировка выполняется по возрастанию значений ат- рибута, указанного в этом предложении. 
Но можно упорядочить строки и по убыванию значения атрибута. 
Для этого нужно после имени атрибута в пред- ложении ORDER BY добавить ключевое слово DESC (это сокращение от слова descendant — убывающий порядок). 
Самостоятельно напишите команду для выборки всех строк из таблицы aircrafts, чтобы строки были упорядочены по убыванию значения атрибута «Максимальная дальность полета, км» (range).

SELECT * FROM bookings.aircrafts ORDER BY range DESC;
 aircraft_code |        model        | range 
---------------+---------------------+-------
 773           | Boeing 777-300      | 11100
 763           | Boeing 767-300      |  7900
 319           | Airbus A319-100     |  6700
 320           | Airbus A320-200     |  5700
 321           | Airbus A321-200     |  5600
 733           | Boeing 737-300      |  4200
 SU9           | Sukhoi SuperJet-100 |  3000
 CR2           | Bombardier CRJ-200  |  2700
 CN1           | Cessna 208 Caravan  |  1200
(9 rows)

# 2.3

Команда UPDATE позволяет в процессе обновления выполнять арифметические действия над значениями, находящимися в строках таблицы. 
Представим себе, что двигатели самолета Sukhoi SuperJet стали в два раза экономичнее, вследствие чего дальность полета этого лайнера возросла ровно в два раза. 
Команда UPDATE позволяет увеличить значение атрибута range в строке, хранящей информацию об этом самолете, даже не выполняя предварительно выборку с целью выяснения текущего значения этого атрибута.
При присваивании нового значения атрибуту range можно справа от знака «=» написать не только числовую константу, но и целое выражение. 
В нашем случае оно будет простым: range = range * 2. 
Самостоятельно напишите команду UPDATE полностью, при этом не забудьте, что увеличить дальность полета нужно только у одной модели — Sukhoi SuperJet, поэтому необходимо использовать условие WHERE. 
Затем с помощью команды SELECT проверьте полученный результат.

demo=# UPDATE bookings.aircrafts SET range=2 * range WHERE model='Sukhoi SuperJet-100';
UPDATE 1

demo=# SELECT * FROM bookings.aircrafts;
 aircraft_code |        model        | range 
---------------+---------------------+-------
 773           | Boeing 777-300      | 11100
 763           | Boeing 767-300      |  7900
 320           | Airbus A320-200     |  5700
 321           | Airbus A321-200     |  5600
 319           | Airbus A319-100     |  6700
 733           | Boeing 737-300      |  4200
 CN1           | Cessna 208 Caravan  |  1200
 CR2           | Bombardier CRJ-200  |  2700
 SU9           | Sukhoi SuperJet-100 |  6000
(9 rows)

demo=# UPDATE bookings.aircrafts SET range=3000 WHERE model='Sukhoi SuperJet-100';
UPDATE 1

(вернул значение обратно)

# 2.4
Если в предложении WHERE команды DELETE вы укажете логически и синтаксически корректное условие, но строк, удовлетворяющих этому условию, в таблице не окажется, то в ответ СУБД выведет сообщение
DELETE 0
Такая ситуация не является ошибкой или сбоем в работе СУБД. Например, если после удаления какой-то строки вы повторно попытаетесь удалить ее же, то получите именно такое сообщение.
Самостоятельно смоделируйте описанную ситуацию, подобрав условие, которому гарантированно не соответствует ни одна строка в таблице «Самолеты» (aircrafts).

SELECT * FROM bookings.aircrafts ;
 aircraft_code |        model        | range 
---------------+---------------------+-------
 773           | Boeing 777-300      | 11100
 763           | Boeing 767-300      |  7900
 SU9           | Sukhoi SuperJet-100 |  3000
 320           | Airbus A320-200     |  5700
 321           | Airbus A321-200     |  5600
 319           | Airbus A319-100     |  6700
 733           | Boeing 737-300      |  4200
 CN1           | Cessna 208 Caravan  |  1200
 CR2           | Bombardier CRJ-200  |  2700
(9 rows)

Удалим самолеты, где range > 100000

demo=# DELETE FROM bookings.aircrafts WHERE range > 100000;
DELETE 0
demo=# 
