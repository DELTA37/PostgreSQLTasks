Формат ввода и вывода даты можно изменить с помощью конфигурационного параметра datestyle. Значение этого параметра состоит из двух компонен- тов: первый управляет форматом вывода даты, а второй регулирует порядок следования составных частей даты (год, месяц, день) при вводе и выводе. Те- кущее значение этого параметра можно узнать с помощью команды SHOW:
    SHOW datestyle;
По умолчанию он имеет такое значение:
DateStyle -----------
     ISO, DMY
    (1 строка)
Продемонстрируем влияние этого параметра на работу с типами данных date и timestamp. Для экспериментов возьмем дату, в которой число (день) превышает 12, чтобы нельзя было день перепутать с номером месяца. Пусть это будет, например, 18 мая 2016 г.

SELECT '18-05-2016'::date;
Хотя порядок следования составных частей даты задан в виде DMY, т. е. «день, месяц, год», но при выводе он изменяется на «год, месяц, день».
date ------------ 2016-05-18
(1 строка)
Попробуем ввести дату в порядке «месяц, день, год»:
SELECT '05-18-2016'::date;
В ответ получим сообщение об ошибке. Если бы мы выбрали дату, в которой число (день) было бы не больше 12, например, 9, то сообщение об ошибке не было бы сформировано, т. е. мы с такой датой не смогли бы проиллюстрировать влияние значения DMY параметра datestyle. Но главное, что в таком случае мы бы просто не заметили допущенной ошибки.
А вот использовать порядок «год, месяц, день» при вводе можно несмотря на то, что параметр datestyle предписывает «день, месяц, год». Порядок «год, месяц, день» является универсальным, его можно использовать всегда, незави- симо от настроек параметра datestyle.
SELECT '2016-05-18'::date;
date ------------ 2016-05-18
(1 строка)
Продолжим экспериментирование с параметром datestyle. Давайте изменим его значение. Сделать это можно многими способами, но мы упомянем лишь некоторые:
– изменив его значение в конфигурационном файле postgresql.conf, который в нашей инсталляции PostgreSQL, описанной в главе 2, находится в каталоге /usr/local/pgsql/data;
– назначив переменную системного окружения PGDATESTYLE;
– воспользовавшись командой SET.

Сейчас выберем третий способ, а первые два рассмотрим при выполнении дру- гих заданий. Поскольку параметр datestyle состоит фактически из двух ча- стей, которые можно задавать не только обе сразу, но и по отдельности, из- меним только порядок следования составных частей даты, не изменяя формат вывода с ISO на какой-либо другой.
SET datestyle TO 'MDY';
Повторим одну из команд, выполненных ранее. Теперь она должна вызвать ошибку. Почему?
SELECT '18-05-2016'::date;
А такая команда, наоборот, теперь будет успешно выполнена:
SELECT '05-18-2016'::date;
Теперь приведите настройку параметра datestyle в исходное состояние:
SET datestyle TO DEFAULT;
Самостоятельно выполните команды SELECT, приведенные выше, но замени- те в них тип date на тип timestamp. Вы увидите, что дата в рамках типа timestamp обрабатывается аналогично типу date.
Сейчас изменим сразу обе части параметра datestyle:
SET datestyle TO 'Postgres, DMY';
Проверьте полученный результат с помощью команды SHOW.
Самостоятельно выполните команды SELECT, приведенные выше, как для зна- чения типа date, так и для значения типа timestamp. Обратите внимание, что если выбран формат Postgres, то порядок следования составных частей даты (день, месяц, год), заданный в параметре datestyle, используется не толь- ко при вводе значений, но и при выводе. Напомним, что вводом мы считаем команду SELECT, а выводом — результат ее выполнения, выведенный на экран.
В документации (см. раздел 8.5.2 «Вывод даты/времени») сказано, что формат вывода даты может принимать значения ISO, Postgres, SQL и German. Пер- вые два варианта мы уже рассмотрели. Самостоятельно поэкспериментируйте с двумя оставшимися по той же схеме, по которой вы уже действовали ранее при выполнении этого задания. Можно воспользоваться и стандартными функ- циями current_date и current_timestamp.

